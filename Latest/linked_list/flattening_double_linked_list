{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"flattening_double_linked_list","provenance":[],"authorship_tag":"ABX9TyN4Qg+kgUO+J2G1tdli1tUs"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["https://www.geeksforgeeks.org/flattening-a-linked-list/"],"metadata":{"id":"4eV9apd03oNa"}},{"cell_type":"code","execution_count":5,"metadata":{"id":"HwinE1N8tL7w","executionInfo":{"status":"ok","timestamp":1651544883248,"user_tz":240,"elapsed":186,"user":{"displayName":"Manu","userId":"10798995386649618854"}}},"outputs":[],"source":["# Creating node with right and down linkage\n","\n","class Node:\n","  def __init__(self, *data):\n","    self.data = data[0] if len(data)>0 else None\n","    self.right = None\n","    self.down = None\n"]},{"cell_type":"code","source":["#Creating a Linked List with right and downward links\n","\n","class DoubleLinkedList:\n","  def __init__(self):\n","    self.head = None\n","\n","  def push(self, headref, data):\n","    new_node = Node(data)\n","    new_node.down = headref\n","\n","    headref = new_node\n","    return headref\n","\n","  def print(self):\n","    temp_ref = self.head\n","    while(temp_ref):\n","      print(temp_ref.data)\n","      temp_ref = temp_ref.down\n","\n","  def merge(self, a, b):\n","    if a==None:\n","      return b\n","    if b==None:\n","      return a\n","\n","    result = None\n","    if a.data<b.data:\n","      result = a\n","      result.down = self.merge(a.down, b)\n","    else:\n","      result = b\n","      result.down = self.merge(a,b.down)\n","    result.right = None\n","\n","    return result\n","\n","  def flatten(self, root):\n","    if (root == None or root.right == None):\n","      return root\n","    root.right = self.flatten(root.right)\n","\n","    root = self.merge(root, root.right)\n","\n","    return root \n","    "],"metadata":{"id":"znMQHOqzvo82","executionInfo":{"status":"ok","timestamp":1651546830125,"user_tz":240,"elapsed":150,"user":{"displayName":"Manu","userId":"10798995386649618854"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"95Qmhi2k0X5C","executionInfo":{"status":"ok","timestamp":1651546833813,"user_tz":240,"elapsed":176,"user":{"displayName":"Manu","userId":"10798995386649618854"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","source":["L = DoubleLinkedList()"],"metadata":{"id":"ZrIlMK0YvrKh","executionInfo":{"status":"ok","timestamp":1651546833991,"user_tz":240,"elapsed":3,"user":{"displayName":"Manu","userId":"10798995386649618854"}}},"execution_count":38,"outputs":[]},{"cell_type":"code","source":["L.head = L.push(L.head, 30)\n","L.head = L.push(L.head, 8)\n","L.head = L.push(L.head, 7);\n","L.head = L.push(L.head, 5);"],"metadata":{"id":"JwvlWP4QvwIX","executionInfo":{"status":"ok","timestamp":1651546834661,"user_tz":240,"elapsed":135,"user":{"displayName":"Manu","userId":"10798995386649618854"}}},"execution_count":39,"outputs":[]},{"cell_type":"code","source":["L.head.right = L.push(L.head.right, 20)\n","L.head.right = L.push(L.head.right, 10)"],"metadata":{"id":"vgbEvTLDySMg","executionInfo":{"status":"ok","timestamp":1651546835053,"user_tz":240,"elapsed":2,"user":{"displayName":"Manu","userId":"10798995386649618854"}}},"execution_count":40,"outputs":[]},{"cell_type":"code","source":["L.head.right.right = L.push(L.head.right.right, 50);\n","L.head.right.right = L.push(L.head.right.right, 22);\n","L.head.right.right = L.push(L.head.right.right, 19);\n"," \n","L.head.right.right.right = L.push(L.head.right.right.right, 45);\n","L.head.right.right.right = L.push(L.head.right.right.right, 40);\n","L.head.right.right.right = L.push(L.head.right.right.right, 35);\n","L.head.right.right.right = L.push(L.head.right.right.right, 20);\n"],"metadata":{"id":"40CqhaWoyWV5","executionInfo":{"status":"ok","timestamp":1651546835623,"user_tz":240,"elapsed":312,"user":{"displayName":"Manu","userId":"10798995386649618854"}}},"execution_count":41,"outputs":[]},{"cell_type":"code","source":["L.head = L.flatten(L.head)"],"metadata":{"id":"Y-Bw-Ukp0E_p","executionInfo":{"status":"ok","timestamp":1651546836404,"user_tz":240,"elapsed":143,"user":{"displayName":"Manu","userId":"10798995386649618854"}}},"execution_count":42,"outputs":[]},{"cell_type":"code","source":["L.print()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YEmOeY7S2rfT","executionInfo":{"status":"ok","timestamp":1651546848895,"user_tz":240,"elapsed":159,"user":{"displayName":"Manu","userId":"10798995386649618854"}},"outputId":"e86e8680-fca9-478c-d775-4da0da1954c3"},"execution_count":44,"outputs":[{"output_type":"stream","name":"stdout","text":["5\n","7\n","8\n","10\n","19\n","20\n","20\n","22\n","30\n","35\n","40\n","45\n","50\n"]}]}]}